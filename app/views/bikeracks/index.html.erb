<script src="//maps.google.com/maps/api/js?v=3.13&amp;sensor=false&amp;libraries=geometry" type="text/javascript"></script>
<script src='//google-maps-utility-library-v3.googlecode.com/svn/tags/markerclustererplus/2.0.14/src/markerclusterer_packed.js' type='text/javascript'></script>

<div class="request-view page full" style="display: block;">
  <header>
    <div class="logo">Bikepark</div>
  </header>

  <div class="background-view"></div>

  <div class="map-view">
    <div class="location-bar">
      <p class="pickup-location">
        <small>Nearest bike parking</small>
        <span id="nearest_bike_parking">N/A</span>
      </p>
    </div>
    <div class="trip-status-bar">
      <p>Pro Tip</p>
      <span></span>
    </div>
    <div class="map-wrap">
      <div id="map" style="position: relative; background-color: rgb(229, 227, 223); overflow: hidden;"></div>
    </div>
  </div>
</div>

<script type="text/javascript">
  if (navigator.geolocation) {
    navigator.geolocation.getCurrentPosition(initialize);
  } else {
    // $TODO: try to use geolocation by IP
  }

  var map;
  var markers = [];
  var markersArray = [];
  var directionsDisplay;

  function initialize(position) {
    var mapOptions = {
      zoom: 18,
      mapTypeId: google.maps.MapTypeId.ROADMAP
    }

    map = new google.maps.Map(document.getElementById('map'), mapOptions);

    var center = map.getCenter();

    // Add user's location marker that will always stay in the center of the map
    centerMarker = new google.maps.Marker({
      position: center,
      map: map,
      optimized: false,
      zIndex: 5,
      icon: 'http://www.loyalpages.com/wp-content/uploads/2013/11/free-map-marker-icon-light-blue-bicycle-e1383984321969.png'
    });

    var infowindow = new google.maps.InfoWindow({
      content: "<a onclick='calculateRoute(); return false;' href='#'>GET DIRECTIONS TO THE NEAREST BIKE RACK</a>"
    });

    infowindow.open(map, centerMarker);

    // Hide the info window close icon
    google.maps.event.addListener(infowindow, 'domready', function () {
      $(".gm-style-iw").next("div").hide();
    });

    origin = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);
    map.setCenter(origin);

    // Add user's geolocation as determined by HTML5
    geoLocationMarker = new google.maps.Marker({
      position: origin,
      map: map,
      icon: 'https://www.google.com/support/enterprise/static/geo/cdate/art/dots/blue_dot.png'
    });

    // Place the origin marker in the center
    google.maps.event.addListener(
      map,
      'bounds_changed',
      function () {
        centerMarker.setPosition(map.getCenter());
      });

    // Show only the markers within the viewport
    google.maps.event.addListener(
      map,
      'idle',
      function () {
        var bounds = map.getBounds();

        // Remove the markers that fall out of the viewport
        for (var key in markers) {
          if (!bounds.contains(markers[key].getPosition())) {
            markers[key].setMap(null);
          }
        }

        var swPoint = bounds.getSouthWest();
        var nePoint = bounds.getNorthEast();

        var swLat = swPoint.lat();
        var swLng = swPoint.lng();
        var neLat = nePoint.lat();
        var neLng = nePoint.lng();

        $.ajax({
          type: 'POST',
          url: "/getBikeracksWithinBounds",
          data: {
            'swLat': swLat,
            'swLng': swLng,
            'neLat': neLat,
            'neLng': neLng
          },
          dataType: "json",
          xhrFields: {
            withCredentials: true
          },
          success: renderRacks,
        });
      });
  }

  function renderRacks(response) {
    for (var i = 0; i < response.length; i++) {
      var point = new google.maps.LatLng(response[i].latitude, response[i].longitude);

      if (!(point.toString() in markers)) {
        var marker = new google.maps.Marker({
          map: map,
          position: point,
          animation: google.maps.Animation.DROP
        });

        markers[point.toString()] = marker;
        markersArray.push(marker);
      }
    }

    var markerClusterOptions = {
      gridSize: 50,
      maxZoom: 16
    };
    var markerCluster = new MarkerClusterer(map, markersArray,
      markerClusterOptions);
  }

  function calculateRoute() {
    $.ajax({
      type: 'POST',
      url: "/getNearestBikeracks",
      data: {
        'longitude': map.getCenter().lng(),
        'latitude': map.getCenter().lat()
      },
      dataType: "json",
      xhrFields: {
        withCredentials: true
      },
      success: getDirections,
    });
  }

  function getDirections(response) {
    if (directionsDisplay) {
      directionsDisplay.setMap(null);
    }

    directionsDisplay = new google.maps.DirectionsRenderer();
    var directionsService = new google.maps.DirectionsService();

    directionsDisplay.setMap(map);

    var origin = map.getCenter();
    var destination = new google.maps.LatLng(response[0]["latitude"], response[
      0]["longitude"]);

    $('#nearest_bike_parking').html(response[0].name);

    var request = {
      origin: origin,
      destination: destination,
      travelMode: google.maps.TravelMode.BICYCLING
    };

    directionsService.route(
      request,
      function (response, status) {
        if (status == google.maps.DirectionsStatus.OK) {
          directionsDisplay.setDirections(response);
        }
      });
  }
</script>