<script src="//maps.google.com/maps/api/js?v=3.13&amp;sensor=false&amp;libraries=geometry" type="text/javascript"></script>
<script src='//google-maps-utility-library-v3.googlecode.com/svn/tags/markerclustererplus/2.0.14/src/markerclusterer_packed.js' type='text/javascript'></script>

<div class="request-view page full" style="display: block;">
  <header>
    <div class="logo"></div>
    <a href="#" class="btn left account"></a>
  </header>

  <div class="background-view"></div>

  <div class="map-view">
    <div class="location-bar">
      <p class="pickup-location">
        <small>Nearest bike parking</small>
        <span>3620 163rd Avenue Northeast</span>
      </p>
      <a href="#" class="btn search"></a>
      <a href="#" class="btn center"></a>
    </div>
    <div class="trip-status-bar">
      <p>Pro Tip</p>
      <span></span>
    </div>
    <div class="map-wrap">
      <div id="map" style="position: relative; background-color: rgb(229, 227, 223); overflow: hidden;"></div>
    </div>
  </div>
</div>

<script type="text/javascript">
  var directionsDisplay = new google.maps.DirectionsRenderer();
  var directionsService = new google.maps.DirectionsService();

  var x = 0;
  var y = 0;

  if (navigator.geolocation) {
    navigator.geolocation.getCurrentPosition(displayOnMap);
  }
  else {
    handler = Gmaps.build('Google');

    handler.buildMap(
    {
      provider: {},
      internal: { id: 'map' }
    },
    function() {
      markers = handler.addMarkers(<%=raw @hash.to_json %>);
      handler.bounds.extendWith(markers);
      handler.fitMapToBounds();
    });
  }

  function displayOnMap(position)
  {
    x = position.coords.latitude;
    y = position.coords.longitude;

    x = 47.6130609;
    y = -122.340035;

    calcRoute();

    var handler = Gmaps.build('Google');
    handler.buildMap({
      provider: {
        mapTypeId: google.maps.MapTypeId.ROADMAP
      },
      internal: {
        id: 'map'
      }
    },
    function() {
        directionsDisplay.setMap(handler.getMap());
        handler.fitMapToBounds();
    });

    handler.buildMap(
    {
      provider: {},
      internal: { id: 'map' }
    },
    function() {
      markers = handler.addMarkers(<%=raw @hash.to_json %>);
      handler.bounds.extendWith(markers);
      handler.fitMapToBounds();
    });
  }

function calcRoute() {
  $.ajax({
    type: 'POST',
    url: "http://localhost:3000/bikerack",
    data: { 'longitude': y, 'latitude': x },
    dataType: "json",
    xhrFields: {withCredentials: true},
    crossDomain: true,
    success: callback,
  });
}

function callback(response)
{
  var origin = new google.maps.LatLng(x, y);
  var destination = new google.maps.LatLng(response["latitude"], response["longitude"]);

  var request = {
      origin: origin,
      destination: destination,
      travelMode:  google.maps.TravelMode.BICYCLING
  };

  directionsService.route(request, function(response, status) {
    if (status == google.maps.DirectionsStatus.OK) {
      directionsDisplay.setDirections(response);
    }
  });
}
</script>